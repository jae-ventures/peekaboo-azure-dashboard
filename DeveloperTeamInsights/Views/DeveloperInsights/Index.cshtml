@model IEnumerable<DeveloperTeamInsights.Models.Developer>

@{
    ViewData["Title"] = "Index";
}

<h1>Index of Developers</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<h2>Developers Insights</h2>

<div class="card-container">
    @foreach (var item in Model) {
        <div class="card">
            <h5>@Html.DisplayFor(modelItem => item.DeveloperName)</h5>
            <p>Developer's work so far in the sprint</p>
            <div class="canvas-container">
                <canvas id="chart-@item.Id"></canvas>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            @foreach (var item in Model)
            {
                <text>
                    var ctx = document.getElementById('chart-@item.Id').getContext('2d');
                    var chart = new Chart(ctx, {
                        type: 'bar', // Change to 'doughnut' for a donut chart
                        data: {
                            labels: ['Tasks Worked', 'Active PRs', 'Peer Reviews Conducted'],
                            datasets: [{
                                label: 'Developer Activity',
                                data: [@item.NumberTasksWorked, @item.NumberActivePRs, @item.NumberReviewsConducted],
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(54, 162, 235, 0.2)',
                                    'rgba(255, 206, 86, 0.2)'
                                ],
                                borderColor: [
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 206, 86, 1)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                </text>
            }
        })
    </script>
}

@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DeveloperName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberTasksWorked)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberActivePRs)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberReviewsConducted)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberDocumentsGenerated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberDocumentsReviewed)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DeveloperName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberTasksWorked)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberActivePRs)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberReviewsConducted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberDocumentsGenerated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberDocumentsReviewed)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table> *@
